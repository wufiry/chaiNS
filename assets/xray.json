#!/bin/bash

trap 'echo "Turn off..."; exit 1' SIGINT

get_package_manager() {
    if [[ -f /etc/debian_version ]]; then
        echo "apt"
    elif [[ -f /etc/redhat-release ]]; then
        echo "dnf"
    elif [[ -f /etc/SuSE-release ]]; then
        echo "zypper"
    elif [[ -f /etc/arch-release ]]; then
        echo "pacman"
    else
        echo "unsupported"
    fi
}

check_installed() {
    local package_manager=$(get_package_manager)
    case "$package_manager" in
        "apt")
            dpkg -l | grep -q "$1"
            ;;
        "dnf")
            dnf list installed "$1" &>/dev/null
            ;;
        "yum")
            yum list installed "$1" &>/dev/null
            ;;
        "zypper")
            zypper se --installed-only "$1" &>/dev/null
            ;;
        "pacman")
            pacman -Qe "$1" &>/dev/null
            ;;
        *)
            echo "Unsupported distribution."
            return 1
            ;;
    esac
    return $?
}

change_core_functionality() {
    local default_config_path="~/chaiNS/tconfig.json"
    local config_path="${1:-$default_config_path}"

    config_path="${config_path/#\~/$HOME}"

    if [[ ! -f "$config_path" ]]; then
        echo "Configuration file not found: $config_path" >&2
        exit 1
    fi

    if pgrep -x "xray" > /dev/null; then
        echo "Stopping xray..."
        sudo killall xray
        sleep 1
        echo "Starting v2ray with the config..."
        nohup sudo /usr/local/bin/v2ray -c "$config_path" > /dev/null 2>&1 &
    elif pgrep -x "v2ray" > /dev/null; then
        echo "Stopping v2ray..."
        sudo killall v2ray
        sleep 1
        echo "Starting xray with the config..."
        nohup sudo /usr/bin/xray -c "$config_path" > /dev/null 2>&1 &
    else
        echo "Neither v2ray nor xray is running." >&2
        exit 1
    fi
}

main_functionality() {
   
ip rule add fwmark 1 table 100
ip route add local 0.0.0.0/0 dev lo table 100

iptables -t mangle -N V2RAY

iptables -t mangle -A V2RAY -d 0.0.0.0/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 10.0.0.0/8 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 100.64.0.0/10 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 127.0.0.1/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 169.254.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 172.16.0.0/12 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 224.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 240.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 255.255.255.255/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p udp ! --dport 53 -j RETURN

iptables -t mangle -A V2RAY -p udp -j TPROXY --on-port 12345 --tproxy-mark 1
iptables -t mangle -A V2RAY -p tcp -j TPROXY --on-port 12345 --tproxy-mark 1
iptables -t mangle -A PREROUTING -j V2RAY

###

iptables -t mangle -N V2RAY_MASK

iptables -t mangle -A V2RAY_MASK -d 0.0.0.0/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 10.0.0.0/8 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 100.64.0.0/10 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 127.0.0.1/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 169.254.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 172.16.0.0/12 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 224.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 240.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 255.255.255.255/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p udp ! --dport 53 -j RETURN

iptables -t mangle -A V2RAY_MASK -j RETURN -m mark --mark 0xff
iptables -t mangle -A V2RAY_MASK -p udp -j MARK --set-mark 1
iptables -t mangle -A V2RAY_MASK -p tcp -j MARK --set-mark 1
iptables -t mangle -A OUTPUT -j V2RAY_MASK

xray run -c ~/chaiNS/tconfig.json   # change ~/ to ur home dir

}

shutdown_functionality() {
    sudo ip rule del fwmark 1 table 100
    sudo ip route del local 0.0.0.0/0 dev lo table 100
    sudo systemctl restart iptables
    echo "chaiNS turns off..."
}

restart_core_functionality() {
    local default_config_path="~/chaiNS/tconfig.json"

    if [[ -z "$1" ]]; then
        echo "Using default config path: $default_config_path"
        config_path="$default_config_path"
    else
        config_path="$1"
    fi

    config_path="${config_path/#\~/$HOME}"

    if [[ ! -f "$config_path" ]]; then
        echo "Configuration file not found: $config_path" >&2
        exit 1
    fi

    if check_installed "v2ray" && pgrep -x "v2ray" > /dev/null; then
        echo "Restarting v2ray with the default config..."
        sudo killall v2ray
        sleep 1
        nohup sudo /usr/local/bin/v2ray -c "$config_path" > /dev/null 2>&1 &
        return
    fi

    if check_installed "xray" && pgrep -x "xray" > /dev/null; then
        echo "Restarting xray with the new config..."
        sudo killall xray
        sleep 1
        nohup sudo /usr/bin/xray -c "$config_path" > /dev/null 2>&1 &
        return
    fi

    echo "Neither v2ray nor xray is running." >&2
    exit 1
}


if [[ $# -gt 0 ]]; then
    case "$1" in
        -h|--help)
            echo "Available commands:"
            echo "  -h, --help       Print available commands"
            echo "  -e, --off        Turns off chaiNS"
            echo "  -rc, --restart-core <path>  Restarts v2ray or xray with the specified config file"
	    echo "  -Cc, --change-core <path>    Changes the core from v2ray to xray or vice versa"
            exit 0
            ;;
        -rc|--restart-core)
            restart_core_functionality "$2"
            exit 0
            ;;
        -Cc|--change-core)
            change_core_functionality "$2"
            exit 0
            ;;
        -e|--off)
            shutdown_functionality
            exit 0
            ;;
        *)
            echo "Unknown command. Use -h or --help for a list of commands."
            exit 1
            ;;
    esac
fi

if [[ $EUID -ne 0 ]]; then
    echo "Only root. Alternative functionality - ' chaiNS --help ' " >&2
    exit 1
fi

main_functionality
