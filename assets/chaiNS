#!/bin/bash

USER_HOME="$HOME"
default_config_path="$USER_HOME/chaiNS/tconfig.json"

main_functionality() {
   
ip rule add fwmark 1 table 100
ip route add local 0.0.0.0/0 dev lo table 100

iptables -t mangle -N V2RAY

iptables -t mangle -A V2RAY -d 0.0.0.0/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 10.0.0.0/8 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 100.64.0.0/10 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 127.0.0.1/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 169.254.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 172.16.0.0/12 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 224.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 240.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 255.255.255.255/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p udp ! --dport 53 -j RETURN

iptables -t mangle -A V2RAY -p udp -j TPROXY --on-port 12345 --tproxy-mark 1
iptables -t mangle -A V2RAY -p tcp -j TPROXY --on-port 12345 --tproxy-mark 1
iptables -t mangle -A PREROUTING -j V2RAY

###

iptables -t mangle -N V2RAY_MASK

iptables -t mangle -A V2RAY_MASK -d 0.0.0.0/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 10.0.0.0/8 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 100.64.0.0/10 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 127.0.0.1/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 169.254.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 172.16.0.0/12 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 224.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 240.0.0.0/4 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 255.255.255.255/32 -p tcp -j RETURN
iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p udp ! --dport 53 -j RETURN

iptables -t mangle -A V2RAY_MASK -j RETURN -m mark --mark 0xff
iptables -t mangle -A V2RAY_MASK -p udp -j MARK --set-mark 1
iptables -t mangle -A V2RAY_MASK -p tcp -j MARK --set-mark 1
iptables -t mangle -A OUTPUT -j V2RAY_MASK

run="core run -c $default_config_path"

}

shutdown() {
    sudo ip rule del fwmark 1 table 100
    sudo ip route del local 0.0.0.0/0 dev lo table 100
    sudo systemctl restart iptables
    echo "chaiNS turns off..."
}

restart_core() {
    local config_path
    config_path="${1:-$default_config_path}"
  
    echo "Using config: $config_path" 

    if pgrep -x "xray" > /dev/null; then
        echo "Restarting xray..."
        sudo killall xray
        sleep 1
        nohup sudo /usr/bin/xray -c "$config_path" > /dev/null 2>&1 &
    elif pgrep -x "v2ray" > /dev/null; then
        echo "Restarting v2ray..."
        sudo killall v2ray
        sleep 1
        nohup sudo /usr/bin/v2ray -c "$config_path" > /dev/null 2>&1 &
    else
        echo "Neither xray nor v2ray is running."
    fi
}

change_core() {
    local config_path
    config_path="${1:-$default_config_path}"
  
    echo "Using config: $config_path" 

    if pgrep -x "xray" > /dev/null; then
        echo "Stopping xray..."
        sudo killall xray
        sleep 1
        echo "Starting v2ray with the config..."
        nohup sudo /usr/local/bin/v2ray -c "$config_path" > /dev/null 2>&1 &
    elif pgrep -x "v2ray" > /dev/null; then
        echo "Stopping v2ray..."
        sudo killall v2ray
        sleep 1
        echo "Starting xray with the config..."
        nohup sudo /usr/bin/xray -c "$config_path" > /dev/null 2>&1 &
    else
        echo "Neither v2ray nor xray is running." >&2
        exit 1
    fi
}

if [[ $# -gt 0 ]]; then
    case "$1" in
        -h|--help)
            echo "Available commands:"
            echo "  -h, --help       Print available commands"
            echo "  -e, --off        Turns off chaiNS"
            echo "  -r, --restart-core <path>  Restarts v2ray or xray with the specified config file"
	    echo "  -c, --change-core <path>    Changes the core from v2ray to xray or vice versa"
            exit 0
            ;;
        -r|--restart-core)
            restart_core "$2"
            exit 0
            ;;
        -c|--change-core)
            change_core "$2"
            exit 0
            ;;
        -e|--off)
            shutdown
            exit 0
            ;;
        *)
            echo "Unknown command. Use -h or --help for a list of commands."
            exit 1
            ;;
    esac
fi

if [[ $EUID -ne 0 ]]; then
    echo "Only root. Alternative functionality - ' chaiNS --help ' " >&2
    exit 1
fi

main_functionality

if [[ -f /usr/bin/xray ]]; then
	xray=$(echo "$run" | sed 's/core/xray/')
	$xray
elif if [[ -f /usr/local/bin/xray ]]; then
	xray=$(echo "$run" | sed 's/core/xray/')
	$xray
    elif [[ -f /usr/bin/v2ray ]]; then
    	v2ray=$(echo "$run" | sed 's/core/v2ray/')
    	$v2ray
elif [[ -f /usr/local/bin/v2ray ]]; then
    	v2ray=$(echo "$run" | sed 's/core/v2ray/')
    	$v2ray
    else
        exit 1
fi
